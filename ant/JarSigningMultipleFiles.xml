<?xml version="1.0" encoding="UTF-8"?>
<!-- default="targetName" - is the name of the target to execute and
those targets may depend on other tarets build success status. -->
<project name="Jar Signing" default="build-static" basedir="."
xmlns="antlib:org.apache.tools.ant" xmlns:if="ant:if" xmlns:unless="ant:unless">

	<!-- ===================== Initialize Property Values =================== -->
	<property name="build.current.dir"  value="."/>
	<property name="build.src.dir"      value="${build.current.dir}"/>
	<property name="build.output.dir"   value="${build.current.dir}/singedJars"/>

	<property name="key.store.fileLocation"  value="D:\Yashwanth\yashjarsigncert.jks"/>
	<property name="key.store.aliasName"     value="Yash"/>
	<property name="key.store.password"      value="Yash@123"/>

	<property name="temp-element"    value="D:\test.jar"/>

	<property name="webapps.build"   value="../build"/>
	<property name="webapp.name"     value="ROOT"/>

	<tstamp><format property='build.time' pattern='yyyy-MM-dd HH:mm:ss'/></tstamp>

	<!-- http://stackoverflow.com/a/23908496/5081877 -->
	<macrodef name="iterate">
		<attribute name="list" />
		<element name="call" implicit="yes" />
		<sequential>
			<local name="element" />
			<local name="tail" />
			<local name="hasMoreElements" />
			<!-- unless to not get a error on empty lists -->
			<loadresource property="element" unless:blank="@{list}" >
				<concat>@{list}</concat>
				<filterchain>
					<replaceregex pattern="([^;]*).*" replace="\1" />
				</filterchain>
			</loadresource>
			<!-- call the tasks that handle the element -->
			<call />
		
			<!-- recursion -->
			<condition property="hasMoreElements">
				<contains string="@{list}" substring=";" />
			</condition>
		
			<loadresource property="tail" if:true="${hasMoreElements}">
				<concat>@{list}</concat>
				<filterchain>
					<replaceregex pattern="[^;]*;(.*)" replace="\1" />
				</filterchain>
			</loadresource>
		
			<iterate list="${tail}" if:true="${hasMoreElements}">
			<call />
			</iterate>
		</sequential>
	</macrodef>

	<!-- ===== BUILD: Create Directories ===== -->
	<target name="build-prepare">
		<mkdir dir="${webapps.build}"/>
		<mkdir dir="${webapps.build}/${webapp.name}"/>
	</target>

	<!-- ===== Create Directories & Copy Static Files ===== -->
	<target name="build-static" depends="build-prepare">
		<copy todir="${webapps.build}/${webapp.name}">
			<fileset dir=".">
				<exclude name="*.xml"/>
			</fileset>
		</copy>
	</target>

	<target name="removeKeysotres">
		<echo>Removing old KeyStores from JAR's</echo>
	
		<fileset id="artifacts.fs" dir=".">
			<include name="*.jar" />
		</fileset>
	
		<pathconvert refid="artifacts.fs" property="artifacts.str" />
	
		<echo message="$${artifacts.str}: ${artifacts.str}" />
		<!-- unless is required for empty lists to not call the enclosed tasks -->
		<iterate list="${artifacts.str}" unless:blank="${artifacts.str}">
			<echo message="I see: ${element}" />
			
			<!-- http://stackoverflow.com/a/2521269/5081877 -->
			<jar destfile="${temp-element}">  <!-- New copy to store jar file data -->
				<zipfileset src="${element}" excludes="**/META-INF/Yash777.*"/>
			</jar>
			
			<move file="${temp-element}" tofile="${element}" /> <!-- Move New file data to actual file -->
			<delete file="${temp-element}" /><!-- Delete New copy of jar file -->
		</iterate>
		<!-- local variable is now empty -->
		<echo message="${element}" />
	</target>
	
	<target name="signjars" depends="removeKeysotres">
		<echo>Creating Direcotry Name ${build.output.dir}</echo>
		<mkdir dir="${build.output.dir}"/>
		
		<signjar destDir="${build.output.dir}" 
			alias="${key.store.aliasName}"
			keystore="${key.store.fileLocation}"
			storepass="${key.store.password}"
			lazy="true">
				<path>
					<fileset dir="${build.src.dir}" includes="**/*.jar" />
				</path>
		</signjar>
	</target>
	
	<target name="remaveFileValues">
		<!-- Example Links:
		http://stackoverflow.com/a/35971054/5081877
		http://www.javalobby.org/articles/ant-preprocessor/?source=archives
		-->
		<!--Rename strings in properties files -->
		<replace file="./config.properties">
			<replacetoken>Yashwanth</replacetoken>
			<replacevalue>Yash</replacevalue>
		</replace>
	</target>

</project>